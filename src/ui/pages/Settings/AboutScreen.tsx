import { useState } from 'react';

import { DISCORD_URL, TELEGRAM_URL, TWITTER_URL } from '@/shared/constant';
import { Column, Content, CopyIcon, Header, Icon, Image, Layout, Row, Text } from '@/ui/components';
import { useIsLight } from '@/ui/state/settings/hooks';
import { colors } from '@/ui/theme/colors';
import { copyToClipboard } from '@/ui/utils';
import { Box } from '@mui/material';

const packageConfig = require('../../../../package.json');

export default function AboutScreen() {
  const [isClickCopy, setIsClickCopy] = useState(false);
  const isLight = useIsLight();

  function copy(str: string) {
    copyToClipboard(str).then(() => {
      setTimeout(() => {
        setIsClickCopy(false);
      }, 3000);
    });
  }

  return (
    <Layout>
      <Header
        onBack={() => {
          window.history.go(-1);
        }}
        title="About"
      />
      <Content justifyBetween>
        <Column>
          <Column mb="xl" py="xl" gap="xl" justifyCenter itemsCenter>
            <Image src={'/images/logo/wallet-logo.png'} height={78} width={78} />
            <svg width="214" height="21" viewBox="0 0 214 21" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                d="M93.8356 20.6193V13.8139L87.2734 0.779785H92.4028L96.3286 9.11355H96.5292L100.398 0.779785H105.412L98.8217 13.8139V20.6193H93.8356Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M89.4834 20.6191H84.7461L83.7314 17.042L83.7432 17.041L82.5088 12.4502L82.4805 12.4521L80.4131 5.10449H80.2256L78.0811 12.8164L78.0781 12.8174L76.6982 17.9619L76.708 17.96L75.9727 20.6191H71.3438L77.2109 0.779297H83.5889L89.4834 20.6191Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M19.5938 20.6193V0.779785H24.582V20.6193H19.5938Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M28.2612 0.779296L44.1328 0.779297L44.1328 5.76753L28.2612 5.76753L28.2612 0.779296Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M38.6914 0.779585L38.6914 20.6191L33.7032 20.6191L33.7032 0.779584L38.6914 0.779585Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M0.0351562 20.6193V0.779785H10.0853C11.3596 0.779785 12.412 0.962417 13.2422 1.32768C14.0918 1.69294 14.7193 2.25045 15.1248 3.0002C15.5496 3.73073 15.762 4.6535 15.762 5.76851C15.762 6.69128 15.6365 7.46987 15.3855 8.10427C15.1345 8.73868 14.7483 9.24812 14.227 9.63261C13.7249 9.99787 13.0781 10.267 12.2864 10.44V10.5554C13.136 10.7284 13.8215 10.9975 14.3428 11.3628C14.8834 11.7281 15.2793 12.2375 15.5303 12.8911C15.7813 13.5255 15.9068 14.3426 15.9068 15.3422C15.9068 16.1689 15.8006 16.909 15.5882 17.5627C15.3951 18.2163 15.0669 18.7738 14.6035 19.2352C14.1594 19.6773 13.5608 20.0234 12.8078 20.2733C12.0741 20.504 11.1665 20.6193 10.0853 20.6193H0.0351562ZM5.04573 16.8706H8.31853C9.01364 16.8706 9.54463 16.8129 9.91149 16.6976C10.2784 16.563 10.5294 16.3323 10.6645 16.0055C10.7997 15.6787 10.8673 15.2173 10.8673 14.6213C10.8673 14.0062 10.7997 13.5352 10.6645 13.2083C10.5294 12.8815 10.2687 12.6604 9.88253 12.5451C9.51567 12.4105 8.99433 12.3432 8.31853 12.3432H5.04573V16.8706ZM5.04573 8.85402H8.23164C8.88814 8.85402 9.39981 8.79635 9.76668 8.681C10.1335 8.54643 10.3846 8.32535 10.5197 8.01776C10.6742 7.71017 10.7514 7.27762 10.7514 6.72012C10.7514 6.12416 10.6838 5.67239 10.5487 5.3648C10.4328 5.05721 10.1915 4.84574 9.8246 4.73039C9.47705 4.61505 8.94606 4.55737 8.23164 4.55737H5.04573V8.85402Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M51.5863 20.6193L47.8203 0.779785H52.0786L54.5155 14.9385H54.7124L57.4692 1.34834H61.8998L64.7059 14.9385H64.9028L67.1427 0.779785H71.401L67.635 20.6193H62.2691L59.6845 8.10427H59.5122L56.9523 20.6193H51.5863Z"
                fill={isLight ? colors.black : colors.white}
              />
              <path
                d="M150.057 20.6191H145.32L144.306 17.042L144.316 17.041L143.082 12.4502L143.055 12.4521L140.987 5.10449H140.799L138.655 12.8164L138.651 12.8174L137.272 17.9619L137.281 17.96L136.547 20.6191H131.918L137.785 0.779297H144.163L150.057 20.6191Z"
                fill="#94E360"
              />
              <path
                d="M112.356 20.6193L108.59 0.779785H112.848L115.285 14.9385H115.482L118.239 1.34834H122.669L125.475 14.9385H125.672L127.912 0.779785H132.171L128.405 20.6193H123.039L120.454 8.10427H120.282L117.722 20.6193H112.356Z"
                fill="#94E360"
              />
              <path
                d="M198.68 4.70439V0.779785H213.963V4.70439H208.728V20.8898H203.915V4.70439H198.68Z"
                fill="#94E360"
              />
              <path d="M168.113 0.779785H172.989V17.1084H179.375V20.8898H168.113V0.779785Z" fill="#94E360" />
              <path d="M152.832 0.779785H157.707V17.1084H164.094V20.8898H152.832V0.779785Z" fill="#94E360" />
              <path
                d="M193.818 8.77197V12.5532H187.393V16.9653H194.66V20.8892H182.594V8.78174H188.627V8.77197H193.818ZM194.66 4.70459H188.627V4.70264H182.594V0.779785H194.66V4.70459Z"
                fill="#94E360"
              />
            </svg>
          </Column>

          <Column gap="lg">
            <div
              className={`bg-item-hover-v2 ${isLight ? 'light' : ''}`}
              style={{
                padding: '12px 10px',
                borderRadius: '8px',
                marginTop: '12px'
              }}>
              <Row
                style={{
                  padding: '0 8px'
                }}
                justifyBetween
                itemsCenter
                full>
                <Text preset="regular" text={'Terms of Service'} color={isLight ? 'black' : 'white'}></Text>
                <Icon
                  onClick={() => {
                    window.open('https://docs.bitway.com/about/privacy-policy ', '_blank');
                  }}
                  icon={'link'}
                  size={18}
                  color={isLight ? 'black' : 'white'}></Icon>
              </Row>
            </div>

            <div
              className={`bg-item-hover-v2 ${isLight ? 'light' : ''}`}
              style={{
                padding: '12px 10px',
                borderRadius: '8px',
                marginTop: '12px'
              }}>
              <Row
                style={{
                  padding: '0 8px'
                }}
                justifyBetween
                itemsCenter
                full>
                <Text preset="regular" text={'Privacy Policy'} color={isLight ? 'black' : 'white'}></Text>

                <Icon
                  onClick={() => {
                    window.open('https://docs.bitway.com/about/privacy-policy ', '_blank');
                  }}
                  icon={'link'}
                  size={18}
                  color={isLight ? 'black' : 'white'}></Icon>
              </Row>
            </div>

            <div
              className={`bg-item-hover-v2 ${isLight ? 'light' : ''}`}
              style={{
                padding: '12px 10px',
                borderRadius: '8px',
                marginTop: '12px'
              }}>
              <Row
                style={{
                  padding: '0 8px'
                }}
                justifyBetween
                itemsCenter
                full>
                <Text preset="regular" text={'Contact us'} color={isLight ? 'black' : 'white'}></Text>

                <Row itemsCenter>
                  <Text
                    preset="sub"
                    text="contact@bitway.com"
                    style={{
                      color: isLight ? 'black' : 'white'
                    }}></Text>
                  <CopyIcon onlyIcon text="contact@bitway.com" defaultColor={isLight ? 'black' : 'white'} />
                </Row>
              </Row>
            </div>

            <div
              className={`bg-item-hover-v2 ${isLight ? 'light' : ''}`}
              style={{
                padding: '12px 10px',
                borderRadius: '8px',
                marginTop: '12px'
              }}>
              <Row
                style={{
                  padding: '0 8px'
                }}
                justifyBetween
                itemsCenter
                full>
                <Text preset="regular" text={'Version'} color={isLight ? 'black' : 'white'}></Text>

                <Text
                  preset="sub"
                  text={`v${packageConfig.version}`}
                  style={{
                    color: isLight ? 'black' : 'white'
                  }}></Text>
              </Row>
            </div>
          </Column>
        </Column>

        <Column>
          <Row justifyCenter gap="x3l" mt="lg">
            <Box
              display={'flex'}
              alignItems={'center'}
              justifyContent={'center'}
              sx={{
                border: `1px solid ${isLight ? colors.light_border : colors.dark_border}`,
                borderRadius: '40px',
                width: '40px',
                height: '40px',
                cursor: 'pointer',
                ':hover': {
                  backgroundColor: isLight ? colors.light_bg : colors.dark_bg
                }
              }}
              onClick={() => {
                window.open(TWITTER_URL);
              }}>
              <svg width="20" height="20" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                  d="M21 20.7035C20.8586 20.7152 20.7751 20.7268 20.6916 20.7268C18.8529 20.7268 17.0142 20.7198 15.1756 20.7268C14.9715 20.7268 14.8463 20.6593 14.7211 20.4941C12.8917 18.0511 11.053 15.615 9.21663 13.179C9.17011 13.1158 9.06912 13.1114 9.00938 13.1623C8.80286 13.338 8.59252 13.5026 8.41206 13.6955C6.57337 15.6546 4.73932 17.6206 2.90295 19.5821C2.58761 19.9194 2.26532 20.2498 1.94071 20.5779C1.88274 20.636 1.80159 20.7128 1.72971 20.7128C1.5625 20.7163 1.39508 20.7184 1.22578 20.7195C0.761324 20.7226 0.523665 20.1672 0.841671 19.8287C2.62239 17.9347 4.40311 16.0385 6.18152 14.1422C6.80755 13.4745 7.43127 12.8067 8.06426 12.1459C8.2057 11.997 8.24048 11.8923 8.10136 11.7085C5.72011 8.54649 3.34813 5.37984 0.973832 2.2132C0.732251 1.8912 0.490671 1.56921 0.232759 1.22498C0.143695 1.1061 0.217809 0.921875 0.366347 0.921875C2.15634 0.921875 3.94866 0.935835 5.73866 0.921875C6.05863 0.921875 6.2534 1.00796 6.45048 1.27321C8.00398 3.36957 9.57834 5.45197 11.1434 7.5367C11.2688 7.7033 11.3929 7.87238 11.5239 8.05029C11.6047 8.15993 11.7729 8.19349 11.8645 8.09278C14.0649 5.74746 16.2653 3.40214 18.468 1.05682C18.5214 0.998657 18.6095 0.940489 18.6814 0.940489C19.1294 0.932566 19.5791 0.93476 20.062 0.935588C20.1686 0.935771 20.2392 1.06394 20.1676 1.14291C17.6797 3.81397 15.1941 6.48503 12.7016 9.15376C12.5763 9.28638 12.5068 9.37712 12.6459 9.56326C14.4962 12.0272 16.3349 14.5005 18.1805 16.9668C19.057 18.1395 19.945 19.3028 20.8284 20.4685C20.8717 20.528 20.9128 20.5897 20.989 20.6978C20.9915 20.7014 20.9956 20.7035 21 20.7035ZM2.73137 2.25042C2.75919 2.31325 2.77078 2.35745 2.79629 2.39235C4.0159 4.00476 5.24015 5.61019 6.45744 7.22492C7.98079 9.24683 9.4995 11.2711 11.0182 13.2976C12.4882 15.2614 13.9536 17.2298 15.4306 19.1912C15.5071 19.2935 15.6787 19.3773 15.8085 19.3796C16.5482 19.3936 17.2902 19.3796 18.0321 19.3773C18.2037 19.3773 18.3006 19.1805 18.1958 19.0447C17.5818 18.2481 17.0008 17.5023 16.4323 16.7458C14.48 14.1445 12.5369 11.5363 10.5846 8.93505C8.96158 6.77354 7.32925 4.61668 5.68997 2.46448C5.60649 2.35513 5.42332 2.27136 5.28652 2.26671C4.60484 2.24577 3.92084 2.25508 3.23684 2.25508C3.08063 2.25508 2.92442 2.25508 2.73891 2.25508C2.73572 2.25508 2.73279 2.25328 2.73137 2.25042Z"
                  fill={isLight ? colors.black : colors.white}
                />
              </svg>
            </Box>

            <Box
              display={'flex'}
              alignItems={'center'}
              justifyContent={'center'}
              sx={{
                border: `1px solid ${isLight ? colors.light_border : colors.dark_border}`,
                borderRadius: '100%',
                width: '40px',
                height: '40px',
                cursor: 'pointer',
                ':hover': {
                  backgroundColor: isLight ? colors.light_bg : colors.dark_bg
                }
              }}
              onClick={() => {
                window.open(TELEGRAM_URL);
              }}>
              <svg width="20" height="20" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g clipPath="url(#clip0_91_2273)">
                  <path
                    d="M3.3957 12.7192L24.1089 4.08867C24.438 3.95207 24.8136 4.1073 24.9518 4.43482C25.0045 4.56211 25.0154 4.70491 24.9828 4.83841L19.8231 25.4771C19.7814 25.6426 19.6758 25.7848 19.5295 25.8727C19.3832 25.9605 19.208 25.9868 19.0424 25.9459C18.9492 25.9226 18.8607 25.8776 18.7862 25.8155L14.3064 22.0823C14.1828 21.9796 14.0253 21.9268 13.8648 21.9342C13.7042 21.9417 13.5523 22.0089 13.4387 22.1227L11.1414 24.4185C11.0815 24.4782 11.0103 24.5256 10.932 24.5578C10.8537 24.59 10.7698 24.6064 10.6852 24.6061C10.6005 24.6058 10.5168 24.5888 10.4387 24.5561C10.3606 24.5234 10.2898 24.4755 10.2302 24.4153C10.111 24.2951 10.0435 24.133 10.0424 23.9636V19.1129C10.0424 18.9421 10.1107 18.7776 10.2302 18.6565L19.5748 9.31198L8.5414 17.587C8.42524 17.6739 8.28321 17.7191 8.1382 17.7155C7.99319 17.7118 7.85363 17.6595 7.742 17.5668L3.23117 13.8073C3.10024 13.6979 3.01806 13.541 3.00264 13.371C2.98722 13.2011 3.03981 13.032 3.1489 12.9008C3.21564 12.8216 3.29946 12.7595 3.3957 12.7192Z"
                    fill={isLight ? colors.black : colors.white}
                  />
                </g>
                <defs>
                  <clipPath id="clip0_91_2273">
                    <rect width="22" height="22" fill="white" transform="translate(3 4)" />
                  </clipPath>
                </defs>
              </svg>
            </Box>

            <Box
              display={'flex'}
              alignItems={'center'}
              justifyContent={'center'}
              sx={{
                border: `1px solid ${isLight ? colors.light_border : colors.dark_border}`,
                borderRadius: '100%',
                width: '40px',
                height: '40px',
                cursor: 'pointer',
                ':hover': {
                  backgroundColor: isLight ? colors.light_bg : colors.dark_bg
                }
              }}
              onClick={() => {
                window.open(DISCORD_URL);
              }}>
              <svg width="20" height="20" viewBox="0 0 29 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path
                  d="M24.3725 1.7736C24.3647 1.75875 24.3518 1.74712 24.3361 1.74078C22.5207 0.920873 20.6049 0.336213 18.6367 0.00143408C18.6188 -0.00183831 18.6004 0.000522432 18.5839 0.00818057C18.5675 0.0158387 18.5539 0.0284043 18.5452 0.0440905C18.2843 0.510165 18.0475 0.9889 17.8356 1.47847C15.714 1.16144 13.556 1.16144 11.4344 1.47847C11.2211 0.987657 10.9805 0.508802 10.7137 0.0440905C10.7045 0.0287452 10.6909 0.016469 10.6745 0.0088606C10.6582 0.00125221 10.6399 -0.00133569 10.622 0.00143408C8.65363 0.33551 6.73774 0.920214 4.92258 1.74083C4.90704 1.74731 4.89393 1.75839 4.88506 1.77252C1.25509 7.10869 0.260709 12.3137 0.748521 17.4542C0.749893 17.4668 0.753825 17.479 0.760083 17.49C0.766341 17.5011 0.774798 17.5108 0.784949 17.5186C2.89864 19.0592 5.26284 20.2351 7.77664 20.9962C7.79434 21.0015 7.81325 21.0012 7.83081 20.9956C7.84837 20.9899 7.86375 20.9791 7.87488 20.9646C8.41479 20.2414 8.89319 19.4757 9.30522 18.6751C9.31088 18.6641 9.31411 18.6521 9.3147 18.6397C9.31529 18.6274 9.31323 18.6152 9.30864 18.6037C9.30406 18.5922 9.29706 18.5819 9.2881 18.5733C9.27915 18.5646 9.26844 18.558 9.25669 18.5538C8.50229 18.2696 7.77194 17.9271 7.07249 17.5294C7.05979 17.5221 7.04912 17.5117 7.04142 17.4994C7.03373 17.487 7.02925 17.4729 7.02838 17.4585C7.02751 17.444 7.03027 17.4295 7.03643 17.4163C7.04259 17.4031 7.05195 17.3917 7.06369 17.3829C7.21087 17.2747 7.35549 17.1631 7.49745 17.0483C7.5099 17.0382 7.52497 17.0318 7.54095 17.0296C7.55694 17.0275 7.5732 17.0298 7.58793 17.0363C12.1703 19.0949 17.1313 19.0949 21.6594 17.0363C21.6742 17.0294 21.6906 17.0268 21.7068 17.0287C21.723 17.0307 21.7384 17.0371 21.751 17.0472C21.8931 17.1626 22.0381 17.2745 22.1859 17.3829C22.1977 17.3916 22.2071 17.403 22.2134 17.4161C22.2196 17.4292 22.2225 17.4437 22.2217 17.4582C22.221 17.4727 22.2166 17.4867 22.209 17.4992C22.2014 17.5116 22.1908 17.522 22.1782 17.5294C21.4803 17.9304 20.7493 18.2728 19.9929 18.5527C19.9812 18.5571 19.9705 18.5639 19.9616 18.5726C19.9527 18.5814 19.9458 18.5918 19.9413 18.6034C19.9368 18.615 19.9348 18.6273 19.9355 18.6397C19.9362 18.652 19.9395 18.6641 19.9453 18.6751C20.3642 19.4712 20.8419 20.236 21.3745 20.9633C21.3854 20.9782 21.4007 20.9894 21.4183 20.9953C21.4359 21.0012 21.455 21.0015 21.4728 20.9961C23.9911 20.2376 26.3594 19.0615 28.4758 17.5186C28.4861 17.5112 28.4946 17.5017 28.5009 17.4908C28.5072 17.4799 28.511 17.4678 28.5122 17.4553C29.0962 11.5123 27.5345 6.34997 24.3725 1.7736ZM9.98955 14.3241C8.60993 14.3241 7.47316 13.0779 7.47316 11.5473C7.47316 10.0167 8.58788 8.77037 9.98955 8.77037C11.4022 8.77037 12.5279 10.0276 12.5059 11.5472C12.5059 13.0779 11.3911 14.3241 9.98955 14.3241ZM19.2934 14.3241C17.9138 14.3241 16.7771 13.0779 16.7771 11.5473C16.7771 10.0167 17.8918 8.77037 19.2934 8.77037C20.7061 8.77037 21.8318 10.0276 21.8098 11.5472C21.8098 13.0779 20.7061 14.3241 19.2934 14.3241Z"
                  fill={isLight ? colors.black : colors.white}
                />
              </svg>
            </Box>
          </Row>
        </Column>
      </Content>
    </Layout>
  );
}
